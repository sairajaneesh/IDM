package com.hyva.idm.sass.sassservice;

import com.hyva.idm.sass.sassentities.CustomerNotifications;
import com.hyva.idm.sass.sassentities.SassCustomer;
import com.hyva.idm.sass.sassmapper.CustomerNotificationMapper;
import com.hyva.idm.sass.sasspojo.CustomerNotificationsPojo;
import com.hyva.idm.sass.sassrespositories.SassCustomerNotificationsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public class SassCustomerNotificationsService {
    @Autowired
    SassCustomerNotificationsRepository sassCustomerNotificationsRepository;

    public CustomerNotifications getCustomerNotificationSave(CustomerNotificationsPojo customerNotificationsPojo,List<SassCustomer> toreglist,List<SassCustomer> fromreglist) {
        if(toreglist.size()>0 || fromreglist.size()>0 && toreglist!=null || fromreglist!=null ) {
            customerNotificationsPojo.setFromAddress(fromreglist.get(0).getAddress());
            customerNotificationsPojo.setToEmail(toreglist.get(0).getEmail());
            customerNotificationsPojo.setToCompname(toreglist.get(0).getCustomerName());
            customerNotificationsPojo.setFromCompname(fromreglist.get(0).getCustomerName());
            customerNotificationsPojo.setFromContact(fromreglist.get(0).getCustomerNumber());
            customerNotificationsPojo.setFromEmail(fromreglist.get(0).getEmail());
        }
//        customerNotificationsPojo.set
        CustomerNotifications customerNotifications = CustomerNotificationMapper.mapPojoToEntity(customerNotificationsPojo);
        customerNotifications = sassCustomerNotificationsRepository.save(customerNotifications);
        return customerNotifications;
    }

    public List<CustomerNotifications> getCustomerRegNo(String fromRegno,String status){
        List<CustomerNotifications> order =sassCustomerNotificationsRepository.findByToRegnoAndStatus(fromRegno,status);
        return order;
    }
}
