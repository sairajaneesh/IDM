package com.hyva.idm.sass.sassservice;


import com.hyva.idm.sass.sassentities.TransactionsData;
import com.hyva.idm.sass.sassmapper.SaasTransactionsDataMapper;
import com.hyva.idm.sass.sasspojo.TransactionsDataPojo;
import com.hyva.idm.sass.sassrespositories.SaasTranscationsDataRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class SaasTranscationsDataService {
   @Autowired
    SaasTranscationsDataRepository saasTranscationsDataRepository;

    public TransactionsData getSalesInvoiceSave(TransactionsDataPojo transactionsDataPojo){
        TransactionsData transactionsData = SaasTransactionsDataMapper.mapPojoToEntity(transactionsDataPojo);


        transactionsData= saasTranscationsDataRepository.save(transactionsData);
        return transactionsData;


    }

    public TransactionsData getSalesQuotationSave(TransactionsDataPojo transactionsDataPojo){
        TransactionsData transactionsData1 = SaasTransactionsDataMapper.mapPojoToEntity(transactionsDataPojo);


        transactionsData1= saasTranscationsDataRepository.save(transactionsData1);
        return transactionsData1;


    }
    public TransactionsData getPurchaseOrderSave(TransactionsDataPojo transactionsDataPojo){
        TransactionsData transactionsData1 = SaasTransactionsDataMapper.mapPojoToEntity(transactionsDataPojo);


        transactionsData1= saasTranscationsDataRepository.save(transactionsData1);
        return transactionsData1;


    }

    public TransactionsData getSupplierPaymentSave(TransactionsDataPojo transactionsDataPojo){
        TransactionsData transactionsData1 = SaasTransactionsDataMapper.mapPojoToEntity(transactionsDataPojo);


        transactionsData1= saasTranscationsDataRepository.save(transactionsData1);
        return transactionsData1;


    }
    public TransactionsData getDebitNoteSave(TransactionsDataPojo transactionsDataPojo){
        TransactionsData transactionsData1 = SaasTransactionsDataMapper.mapPojoToEntity(transactionsDataPojo);


        transactionsData1= saasTranscationsDataRepository.save(transactionsData1);
        return transactionsData1;


    }

    public void getPurchaseInvoiceSave(TransactionsData transactionsData){
        saasTranscationsDataRepository.save(transactionsData);
    }

    public void getPurchaseQuotationSave(TransactionsData transactionsData){
        saasTranscationsDataRepository.save(transactionsData);
    }

    public void getSalesOrderSave(TransactionsData transactionsData){
        saasTranscationsDataRepository.save(transactionsData);
    }







}
